name: Deploy do Site de Dia dos Namorados na AWS

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # Job 1: Construir a imagem Docker e enviar para o Docker Hub
  build-and-push:
    name: 1. Build e Push para Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/valentine-app:latest

  # Job 2: Fazer o deploy na instância EC2
  deploy-to-aws:
    name: 2. Deploy na AWS EC2
    runs-on: ubuntu-latest
    needs: build-and-push # Depende apenas do build agora

    steps:
      - name: Conectar na EC2 e fazer o deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }} # USA O IP QUE VOCÊ COLOCOU NOS SEGREDOS
          username: ubuntu
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          script: |
            # Instala o Docker na instância (só fará algo na primeira vez)
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo usermod -aG docker ubuntu

            # Puxa a imagem mais recente do Docker Hub
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/valentine-app:latest

            # Para e remove a versão antiga do site, se existir
            sudo docker stop valentine-site || true
            sudo docker rm valentine-site || true

            # Roda o novo container com o site atualizado na porta 80
            sudo docker run -d --name valentine-site -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/valentine-app:latest